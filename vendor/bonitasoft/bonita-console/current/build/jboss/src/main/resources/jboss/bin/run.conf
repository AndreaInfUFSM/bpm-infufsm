## -*- shell-script -*- ######################################################
##                                                                          ##
##  JBoss Bootstrap Script Configuration                                    ##
##                                                                          ##
##############################################################################

### $Id: run.conf 88389 2009-05-08 02:37:00Z ispringer $

#
# This shell script is sourced by run.sh to initialize the environment 
# variables that run.sh uses. It is recommended to use this file to
# configure these variables, rather than modifying run.sh itself. 
#

#
# Specify the maximum file descriptor limit, use "max" or "maximum" to use
# the default, as queried by the system.
#
# Defaults to "maximum"
#
#MAX_FD="maximum"

#
# Specify the JBoss Profiler configuration file to load.
#
# Default is to not load a JBoss Profiler configuration file.
#
#PROFILER=""

#
# Specify the location of the Java home directory.  If set then $JAVA will
# be defined to $JAVA_HOME/bin/java, else $JAVA will be "java".
#
#JAVA_HOME="/usr/java/jdk1.6.0"

#
# Specify the exact Java VM executable to use.
#
#JAVA=""

#
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="-Xms128m -Xmx512m -XX:MaxPermSize=256m -Dorg.jboss.resolver.warning=true -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000"
fi

# Sample JPDA settings for remote socket debugging
#JAVA_OPTS="$JAVA_OPTS -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n"

# Sample JPDA settings for shared memory debugging 
#JAVA_OPTS="$JAVA_OPTS -Xrunjdwp:transport=dt_shmem,address=jboss,server=y,suspend=n"
#
#Sets some variables
BONITA_OPTS="-DBONITA_HOME=../bonita -Dorg.ow2.bonita.api-type=EJB3 -Djava.naming.factory.initial=org.jnp.interfaces.NamingContextFactory -Djava.naming.provider.url=jnp://localhost:1099"
LOG_OPTS="-Djava.util.logging.config.file=../external/logging/logging.properties"
mycwd=`pwd`
CMIS_CONFIG="-Dexo.data.dir=`dirname ${mycwd}`/external/xcmis/ext-exo-data -Dorg.exoplatform.container.standalone.config=`dirname ${mycwd}`/external/xcmis/ext-exo-conf/exo-configuration-hsql.xml"
JAVA_OPTS="$JAVA_OPTS $BONITA_OPTS $LOG_OPTS $CMIS_CONFIG -Dfile.encoding=UTF-8 -Xshare:auto -Xms512m -Xmx1024m -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError"
export JAVA_OPTS

REQUIRED_VERSION=1.6

# Transform the required version string into a number that can be used in comparisons
R_VERSION=`echo $REQUIRED_VERSION | sed -e 's;\.;0;g'`
# Check JAVA_HOME directory to see if Java version is adequate
JAVA_VERSION=`java -version 2>&1 | head -n 1 | cut -d\" -f 2`
VERSION=`echo $JAVA_VERSION | awk '{ print substr($1, 1, 3); }' | sed -e 's;\.;0;g'`

if [ $VERSION ]
then
  if [ $VERSION = $R_VERSION ]
  then
    :
  else
    echo "Error: unsupported Java version"
    echo "You are running on Java $JAVA_VERSION but Bonita Open Solution requires Java $REQUIRED_VERSION"
    exit 1
  fi
else
  echo "Warning: Unable to detect your java version"
  echo "Bonita Open Solution requires Java $REQUIRED_VERSION."
  echo "Bonita Open Solution may not work properly"
fi
